class Solution {
    public int minPathSum(int[][] grid) {
        int[][] dp = grid;
        for(int i=0;i<grid.length;i++) {
            for(int j=0;j<grid[i].length;j++) {
                if (i==0 && j==0) {
                    continue;
                } else if(i==0) {
                    dp[i][j]=dp[i][j-1]+dp[i][j];
                } else if(j==0) {
                    dp[i][j]=dp[i-1][j]+dp[i][j];
                } else {
                    int left = dp[i-1][j];
                    int top = dp[i][j-1];
                    dp[i][j]=Math.min(left, top) + dp[i][j];
                }
            }
        }
        // DP方程：f(i,j)=Math.min(f(i-1,j),f(i,j-1))
        return dp[grid.length-1][grid[0].length-1];
    }
}
